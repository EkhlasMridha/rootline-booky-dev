{"version":3,"file":"rootline-dialog.js","sources":["../../../projects/rootline-dialog/src/lib/root-line-modal.config.ts","../../../projects/rootline-dialog/src/lib/rootline-modal/rootline-modal.component.html","../../../projects/rootline-dialog/src/lib/rootline-modal/rootline-modal.component.ts","../../../projects/rootline-dialog/src/lib/rootline-modal.service.ts","../../../projects/rootline-dialog/src/lib/rootline-dialog.module.ts","../../../projects/rootline-dialog/src/public-api.ts","../../../projects/rootline-dialog/src/rootline-dialog.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport interface ModalConfig {\r\n  warnColor: string;\r\n  successColor: string;\r\n  errorColor: string;\r\n  generalColor: string;\r\n  type: 'success' | 'warn' | 'error' | 'general';\r\n  matIcon: string;\r\n  localIcon: string;\r\n  headerText: string;\r\n  description: string;\r\n  primaryButtonName: string;\r\n  secondaryButtonName: string;\r\n  modalWidth: string;\r\n  disableClose: boolean;\r\n  isLoader: boolean;\r\n  loaderText: string;\r\n  primaryEvent: (event: MouseEvent) => any;\r\n  secondaryEvent: (event: MouseEvent) => any;\r\n}\r\n\r\nexport const DefaultConfig: Partial<ModalConfig> = {\r\n  successColor: '#009900 ',\r\n  errorColor: '#ff0000 ',\r\n  warnColor: '#FFCC00 ',\r\n  generalColor: '#242424',\r\n  type: 'general',\r\n  modalWidth: 'auto',\r\n  disableClose: false,\r\n  isLoader: false,\r\n  loaderText: 'Loading ...',\r\n  primaryEvent: () => {},\r\n  secondaryEvent: () => {},\r\n};\r\n\r\nexport interface ModalToken {\r\n  default: ModalConfig;\r\n  config: Partial<ModalConfig>;\r\n}\r\n\r\nexport const ROOTLINE_MODAL_CONFIG = new InjectionToken<ModalToken>(\r\n  'ModalToken'\r\n);\r\n","<div fxLayout=\"column\" fxLayoutGap=\"30px\" *ngIf=\"!modalConfig.isLoader\">\n  <div fxLayout=\"column\" fxLayoutGap=\"20px\">\n    <div\n      *ngIf=\"modalConfig.matIcon && !modalConfig.localIcon\"\n      fxLayoutAlign=\"center center\"\n      class=\"modal-icon\"\n    >\n      <mat-icon [style.color]=\"typeColor\">{{ modalConfig.matIcon }}</mat-icon>\n    </div>\n    <div\n      *ngIf=\"modalConfig.localIcon\"\n      class=\"modal-icon\"\n      fxLayoutAlign=\"center center\"\n    >\n      <mat-icon\n        [svgIcon]=\"modalConfig.localIcon\"\n        [style.color]=\"typeColor\"\n      ></mat-icon>\n    </div>\n    <div fxLayout=\"column\" fxLayoutGap=\"15px\">\n      <div fxLayoutAlign=\"center center\" *ngIf=\"modalConfig.headerText\">\n        <span class=\"text-center modal-header\">{{\n          modalConfig.headerText\n        }}</span>\n      </div>\n      <div fxLayoutAlign=\"center center\" *ngIf=\"modalConfig.description\">\n        <span class=\"modal-description\">{{ modalConfig.description }}</span>\n      </div>\n    </div>\n  </div>\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n    <button\n      mat-stroked-button\n      class=\"outline-secondary-button\"\n      color=\"primary\"\n      *ngIf=\"modalConfig.secondaryButtonName\"\n      (click)=\"secodaryButton($event)\"\n    >\n      {{ modalConfig.secondaryButtonName }}\n    </button>\n    <button\n      mat-raised-button\n      color=\"accent\"\n      *ngIf=\"modalConfig.primaryButtonName\"\n      (click)=\"primaryButton($event)\"\n    >\n      {{ modalConfig.primaryButtonName }}\n    </button>\n  </div>\n</div>\n<div\n  *ngIf=\"modalConfig.isLoader\"\n  fxLayoutAlign=\"start center\"\n  fxLayoutGap=\"30px\"\n>\n  <div>\n    <mat-spinner color=\"accent\" diameter=\"40\"></mat-spinner>\n  </div>\n  <div>\n    <span style=\"font-size: 16px\">{{ modalConfig.loaderText }}</span>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DefaultConfig, ModalConfig } from '../root-line-modal.config';\n\n@Component({\n  selector: 'rootline-rootline-modal',\n  templateUrl: './rootline-modal.component.html',\n  styleUrls: ['./rootline-modal.component.scss'],\n})\nexport class RootlineModalComponent {\n  modalConfig: Partial<ModalConfig>;\n  typeColor: string;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) config: Partial<ModalConfig>,\n    private ref: MatDialogRef<RootlineModalComponent>\n  ) {\n    this.modalConfig = config;\n    this.typeColor = this.setModalColor(this.modalConfig);\n  }\n\n  primaryButton(event: MouseEvent) {\n    this.modalConfig.primaryEvent(event);\n    this.ref.close();\n    this.modalConfig = DefaultConfig;\n  }\n  secodaryButton(event: MouseEvent) {\n    this.modalConfig.secondaryEvent(event);\n    this.ref.close();\n    this.modalConfig = DefaultConfig;\n  }\n\n  private setModalColor(config: Partial<ModalConfig>) {\n    if (config.type == 'general') {\n      return config.generalColor;\n    } else if (config.type == 'success') {\n      return config.successColor;\n    } else if (config.type == 'warn') {\n      return config.warnColor;\n    } else if (config.type == 'error') {\n      return config.errorColor;\n    }\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ModalConfig, ModalToken } from './root-line-modal.config';\nimport { ROOTLINE_MODAL_CONFIG } from './root-line-modal.config';\nimport { RootlineModalComponent } from './rootline-modal/rootline-modal.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RootlineModalService {\n  modalConfig: Partial<ModalConfig>;\n  storedDefault: Partial<ModalConfig>;\n  constructor(\n    private dialog: MatDialog,\n    @Inject(ROOTLINE_MODAL_CONFIG) token: ModalToken\n  ) {\n    this.storedDefault = token.default;\n    this.modalConfig = {\n      ...token.default,\n      ...token.config,\n    };\n    this.modalConfig = this.verifyConfig(this.modalConfig);\n  }\n\n  private applyConfig(config: Partial<ModalConfig>) {\n    config = this.verifyConfig(config);\n    this.modalConfig = {\n      ...this.modalConfig,\n      ...config,\n    };\n  }\n\n  dispose() {\n    this.modalConfig = { ...this.storedDefault };\n  }\n\n  private verifyConfig(config: Partial<ModalConfig>) {\n    if (config.isLoader) {\n      config.modalWidth = 'auto';\n    }\n    return config;\n  }\n\n  private openDialog(config: Partial<ModalConfig>) {\n    this.applyConfig(config);\n    return this.dialog.open(RootlineModalComponent, {\n      width: this.modalConfig.modalWidth,\n      disableClose: this.modalConfig.disableClose,\n      data: this.modalConfig,\n    });\n  }\n\n  openConfirmationModal(\n    config: Partial<ModalConfig>\n  ): MatDialogRef<RootlineModalComponent> {\n    return this.openDialog(config);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RootlineModalComponent } from './rootline-modal/rootline-modal.component';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {\n  ModalConfig,\n  DefaultConfig,\n  ROOTLINE_MODAL_CONFIG,\n} from './root-line-modal.config';\nimport { RootlineModalService } from './rootline-modal.service';\n\nexport const DefaultComponentConfig: Partial<ModalConfig> = {\n  ...DefaultConfig,\n};\n\n@NgModule({\n  declarations: [RootlineModalComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatIconModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n  ],\n  providers: [RootlineModalService],\n  exports: [RootlineModalComponent],\n})\nexport class RootlineDialogModule {\n  static forChild(\n    config: Partial<ModalConfig> = {}\n  ): ModuleWithProviders<RootlineDialogModule> {\n    return {\n      ngModule: RootlineDialogModule,\n      providers: [\n        {\n          provide: ROOTLINE_MODAL_CONFIG,\n          useValue: {\n            default: DefaultComponentConfig,\n            config,\n          },\n        },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of rootline-dialog\n */\n\nexport * from './lib/rootline-modal.service';\nexport * from './lib/rootline-modal/rootline-modal.component';\nexport * from './lib/rootline-dialog.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵstyleProp","i0.ɵɵtextInterpolate","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate"],"mappings":"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"}