{"version":3,"file":"rootline-dialog.umd.js","sources":["../../../projects/rootline-dialog/src/lib/root-line-modal.config.ts","../../../projects/rootline-dialog/src/lib/rootline-modal/rootline-modal.component.html","../../../projects/rootline-dialog/src/lib/rootline-modal/rootline-modal.component.ts","../../../projects/rootline-dialog/src/lib/rootline-modal.service.ts","../../../projects/rootline-dialog/src/lib/rootline-dialog.module.ts","../../../projects/rootline-dialog/src/public-api.ts","../../../projects/rootline-dialog/src/rootline-dialog.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport interface ModalConfig {\r\n  warnColor: string;\r\n  successColor: string;\r\n  errorColor: string;\r\n  generalColor: string;\r\n  type: 'success' | 'warn' | 'error' | 'general';\r\n  matIcon: string;\r\n  localIcon: string;\r\n  headerText: string;\r\n  description: string;\r\n  primaryButtonName: string;\r\n  secondaryButtonName: string;\r\n  modalWidth: string;\r\n  disableClose: boolean;\r\n  isLoader: boolean;\r\n  loaderText: string;\r\n  primaryEvent: (event: MouseEvent) => any;\r\n  secondaryEvent: (event: MouseEvent) => any;\r\n}\r\n\r\nexport const DefaultConfig: Partial<ModalConfig> = {\r\n  successColor: '#009900 ',\r\n  errorColor: '#ff0000 ',\r\n  warnColor: '#FFCC00 ',\r\n  generalColor: '#242424',\r\n  type: 'general',\r\n  modalWidth: 'auto',\r\n  disableClose: false,\r\n  isLoader: false,\r\n  loaderText: 'Loading ...',\r\n  primaryEvent: () => {},\r\n  secondaryEvent: () => {},\r\n};\r\n\r\nexport interface ModalToken {\r\n  default: ModalConfig;\r\n  config: Partial<ModalConfig>;\r\n}\r\n\r\nexport const ROOTLINE_MODAL_CONFIG = new InjectionToken<ModalToken>(\r\n  'ModalToken'\r\n);\r\n","<div fxLayout=\"column\" fxLayoutGap=\"30px\" *ngIf=\"!modalConfig.isLoader\">\n  <div fxLayout=\"column\" fxLayoutGap=\"20px\">\n    <div\n      *ngIf=\"modalConfig.matIcon && !modalConfig.localIcon\"\n      fxLayoutAlign=\"center center\"\n      class=\"modal-icon\"\n    >\n      <mat-icon [style.color]=\"typeColor\">{{ modalConfig.matIcon }}</mat-icon>\n    </div>\n    <div\n      *ngIf=\"modalConfig.localIcon\"\n      class=\"modal-icon\"\n      fxLayoutAlign=\"center center\"\n    >\n      <mat-icon\n        [svgIcon]=\"modalConfig.localIcon\"\n        [style.color]=\"typeColor\"\n      ></mat-icon>\n    </div>\n    <div fxLayout=\"column\" fxLayoutGap=\"15px\">\n      <div fxLayoutAlign=\"center center\" *ngIf=\"modalConfig.headerText\">\n        <span class=\"text-center modal-header\">{{\n          modalConfig.headerText\n        }}</span>\n      </div>\n      <div fxLayoutAlign=\"center center\" *ngIf=\"modalConfig.description\">\n        <span class=\"modal-description\">{{ modalConfig.description }}</span>\n      </div>\n    </div>\n  </div>\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n    <button\n      mat-stroked-button\n      class=\"outline-secondary-button\"\n      color=\"primary\"\n      *ngIf=\"modalConfig.secondaryButtonName\"\n      (click)=\"secodaryButton($event)\"\n    >\n      {{ modalConfig.secondaryButtonName }}\n    </button>\n    <button\n      mat-raised-button\n      color=\"accent\"\n      *ngIf=\"modalConfig.primaryButtonName\"\n      (click)=\"primaryButton($event)\"\n    >\n      {{ modalConfig.primaryButtonName }}\n    </button>\n  </div>\n</div>\n<div\n  *ngIf=\"modalConfig.isLoader\"\n  fxLayoutAlign=\"start center\"\n  fxLayoutGap=\"30px\"\n>\n  <div>\n    <mat-spinner color=\"accent\" diameter=\"40\"></mat-spinner>\n  </div>\n  <div>\n    <span style=\"font-size: 16px\">{{ modalConfig.loaderText }}</span>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DefaultConfig, ModalConfig } from '../root-line-modal.config';\n\n@Component({\n  selector: 'rootline-rootline-modal',\n  templateUrl: './rootline-modal.component.html',\n  styleUrls: ['./rootline-modal.component.scss'],\n})\nexport class RootlineModalComponent {\n  modalConfig: Partial<ModalConfig>;\n  typeColor: string;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) config: Partial<ModalConfig>,\n    private ref: MatDialogRef<RootlineModalComponent>\n  ) {\n    this.modalConfig = config;\n    this.typeColor = this.setModalColor(this.modalConfig);\n  }\n\n  primaryButton(event: MouseEvent) {\n    this.modalConfig.primaryEvent(event);\n    this.ref.close();\n    this.modalConfig = DefaultConfig;\n  }\n  secodaryButton(event: MouseEvent) {\n    this.modalConfig.secondaryEvent(event);\n    this.ref.close();\n    this.modalConfig = DefaultConfig;\n  }\n\n  private setModalColor(config: Partial<ModalConfig>) {\n    if (config.type == 'general') {\n      return config.generalColor;\n    } else if (config.type == 'success') {\n      return config.successColor;\n    } else if (config.type == 'warn') {\n      return config.warnColor;\n    } else if (config.type == 'error') {\n      return config.errorColor;\n    }\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ModalConfig, ModalToken } from './root-line-modal.config';\nimport { ROOTLINE_MODAL_CONFIG } from './root-line-modal.config';\nimport { RootlineModalComponent } from './rootline-modal/rootline-modal.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RootlineModalService {\n  modalConfig: Partial<ModalConfig>;\n  storedDefault: Partial<ModalConfig>;\n  constructor(\n    private dialog: MatDialog,\n    @Inject(ROOTLINE_MODAL_CONFIG) token: ModalToken\n  ) {\n    this.storedDefault = token.default;\n    this.modalConfig = {\n      ...token.default,\n      ...token.config,\n    };\n    this.modalConfig = this.verifyConfig(this.modalConfig);\n  }\n\n  private applyConfig(config: Partial<ModalConfig>) {\n    config = this.verifyConfig(config);\n    this.modalConfig = {\n      ...this.modalConfig,\n      ...config,\n    };\n  }\n\n  dispose() {\n    this.modalConfig = { ...this.storedDefault };\n  }\n\n  private verifyConfig(config: Partial<ModalConfig>) {\n    if (config.isLoader) {\n      config.modalWidth = 'auto';\n    }\n    return config;\n  }\n\n  private openDialog(config: Partial<ModalConfig>) {\n    this.applyConfig(config);\n    return this.dialog.open(RootlineModalComponent, {\n      width: this.modalConfig.modalWidth,\n      disableClose: this.modalConfig.disableClose,\n      data: this.modalConfig,\n    });\n  }\n\n  openConfirmationModal(\n    config: Partial<ModalConfig>\n  ): MatDialogRef<RootlineModalComponent> {\n    return this.openDialog(config);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RootlineModalComponent } from './rootline-modal/rootline-modal.component';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {\n  ModalConfig,\n  DefaultConfig,\n  ROOTLINE_MODAL_CONFIG,\n} from './root-line-modal.config';\nimport { RootlineModalService } from './rootline-modal.service';\n\nexport const DefaultComponentConfig: Partial<ModalConfig> = {\n  ...DefaultConfig,\n};\n\n@NgModule({\n  declarations: [RootlineModalComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatIconModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n  ],\n  providers: [RootlineModalService],\n  exports: [RootlineModalComponent],\n})\nexport class RootlineDialogModule {\n  static forChild(\n    config: Partial<ModalConfig> = {}\n  ): ModuleWithProviders<RootlineDialogModule> {\n    return {\n      ngModule: RootlineDialogModule,\n      providers: [\n        {\n          provide: ROOTLINE_MODAL_CONFIG,\n          useValue: {\n            default: DefaultComponentConfig,\n            config,\n          },\n        },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of rootline-dialog\n */\n\nexport * from './lib/rootline-modal.service';\nexport * from './lib/rootline-modal/rootline-modal.component';\nexport * from './lib/rootline-dialog.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵstyleProp","i0.ɵɵtextInterpolate","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate","MAT_DIALOG_DATA","Component","Inject","Injectable","CommonModule","MatButtonModule","HttpClientModule","MatIconModule","MatDialogModule","FlexLayoutModule","MatProgressSpinnerModule","NgModule"],"mappings":"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"}